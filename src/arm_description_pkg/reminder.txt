1) make the config file

2) onshape-to-robot /home/nobel/workspace_arm/IRoC_U_arm/arm_ws/src/arm_description_pkg/meshes

3) onshape-to-robot-bullet /home/nobel/workspace_arm/IRoC_U_arm/arm_ws/src/arm_description_pkg/meshes

4) change the urdf file path format "package" to "file", specific replace "package:///" with "file://$(find arm_description_pkg)/meshes_upright_xacro_copy/"

5) before visulization install meshes in install file from CMakelist.txt

6) urdf visulization using rviz ="ros2 launch urdf_tutorial display.launch.py model:=/home/nobel/workspace_arm/IRoC_U_arm/arm_ws/src/arm_description_pkg/meshes/robot.urdf"

7) the orientation in onshape also affects the orinetation and position of tf in rviz

8) add "xmlns:xacro= "http://www.ros.org/wiki/xacro">" in robot name tag and change the .urdf to .xacro and wallah xacro file

9) we can save the setting in rviz and give the congfig file as an argument in launch file

10) ros2 run robot_state_publisher robot_state_publisher --ros-args -p robot_description:="$(xacro /home/nobel/workspace_arm/IRoC_U_arm/arm_ws/src/arm_description_pkg/meshes_upright_xacro/robot.urdf.xacro)"
//publishes the joint states of robot

11) ros2 launch gazebo_ros gazebo.launch.py //launches gazebo

12) ros2 run gazebo_ros spawn_entity.py -topic robot_description -entity my_robot //spawns robot in gazebo

13) in launch file whatever pkg's are used add them in package.xml with exec_depend tag 

14)//if you want ot fix a part in the world use this, It turns out that the dummy link should be named 'world' explicitly. The following code works:

<link name="world"/>

  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="link_0"/>
  </joint>

15) arm_controller_config.ymal is indentation sensitive

16) tf child to parent side pointing

17) save the gazebo world file without the robot in a seperate folder /// without the robot !!!

18) make a demo link without any visual tag and place it on the camera as child //by default the camera link points towards the x axis, so the demo link is created with x axis pointing towards the desired way

<link name ="cam_link_oriented">
</link>

<joint name="camJoint_oriented" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 -1.57"/>
    <parent link="part_8" />
    <child link="cam_link_oriented" />
</joint>

19) 







